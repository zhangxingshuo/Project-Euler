#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

#Let us list the factors of the first seven triangle numbers:

# 1: 1
# 3: 1,3
# 6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.

#What is the value of the first triangle number to have over five hundred divisors?


def triangles(lim):
	table = [None]*lim
	table[0] = 0
	for i in xrange(1,lim):
		table[i] = table[i-1] + i
	return table

def numFactors(n):
	numFactors = 1
	for i in xrange(2,int(round(n**0.5))):
		power = 0
		while (n%i == 0):
			n /= i
			power +=1
		numFactors *= power+1
	if n > 1:
		numFactors *= 2
	return numFactors

tri = triangles(30000)
i = 5000
num = numFactors(tri[i])
while num <= 500:
	num = numFactors(tri[i])
	i += 1
print tri[i - 1]